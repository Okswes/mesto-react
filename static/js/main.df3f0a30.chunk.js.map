{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","input","method","body","JSON","stringify","name","author","about","job","link","cardId","avatar","authorization","Card","props","key","card","_id","onClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","userData","initialCards","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","item","onCardClick","Footer","PopupWithForm","isOpen","noValidate","title","children","type","buttonName","id","onClose","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.df3f0a30.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} className=\"header__logo\" alt=\"Место\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header"," class Api{\r\n    constructor(options){\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo(){\r\n      return fetch(`${this.baseUrl}/users/me`, {headers: this.headers})\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    }\r\n\r\n    getInitialCards(){\r\n       return fetch(`${this.baseUrl}/cards`, {headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    changeProfileInfo(input){\r\n      return fetch(`${this.baseUrl}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.author,\r\n          about: input.job\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n\r\n    addNewCard(input){\r\n      return fetch(`${this.baseUrl}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.name,\r\n          link: input.link\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    putLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'PUT', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    deleteLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'DELETE', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    changeAvatar(input){\r\n      return fetch(`${this.baseUrl}/users/me/avatar`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: input.avatar\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    deleteCard(cardId){\r\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {method: 'DELETE', headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n      authorization: 'db48a2d9-d58c-40f0-82e6-c72b8d0b86f5',\r\n      'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api","import React from 'react';\r\n\r\n\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"place\" key={props.card._id}>\r\n            <img className=\"place__picture\" alt=\"\" src={props.card.link} onClick={handleClick} />\r\n            <button className=\"place__delete\"></button>\r\n            <div className=\"place__textarea\">\r\n                <p className=\"place__text\">{props.card.name}</p>\r\n                <div className=\"place__likesform\">\r\n                    <button className=\"place__like\"></button>\r\n                    <p className=\"place__likecount\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport api from '../utils/Api';\r\nimport Card from './Card';\r\n\r\n\r\nfunction Main(props) {\r\n    const [userName, setUserName] = React.useState('One');\r\n    const [userDescription, setUserDescription] = React.useState('Two');\r\n    const [userAvatar, setUserAvatar] = React.useState('Three');\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n            .then(([userData, initialCards]) => {\r\n                setUserName(userData.name);\r\n                setUserDescription(userData.about);\r\n                setUserAvatar(userData.avatar);\r\n                setCards([...initialCards]);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-block\">\r\n                    <img src={userAvatar} className=\"profile__avatar\" alt=\"Жак-Ив Кусто\" />\r\n                    <button className=\"profile__edit-icon\" onClick={props.onEditAvatar}></button>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__info-grid\">\r\n                        <h2 className=\"profile__title\">{userName}</h2>\r\n                        <button className=\"edit-button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{userDescription}</p>\r\n                </div>\r\n                <button className=\"add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"place-list\">\r\n                {cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} />)}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup__container\" name={props.name} noValidate>\r\n                <fieldset className=\"popup__user-info\">\r\n                    <h3 className=\"popup__title\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup__button\" type=\"submit\">{props.buttonName}</button>\r\n                </fieldset>\r\n                <button className=\"close-button\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\r\n\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.card.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__picture-container\">\r\n                <img className=\"popup__full-picture\" alt={props.card.name} src={props.card.link} />\r\n                <p className=\"popup__picture-title\">{props.card.name}</p>\r\n                <button className=\"close-button\" id=\"close-button-picture\" type=\"reset\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpen: false,\n        link: '',\n        name: ''\n    });\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(props) {\n        setSelectedCard({\n            isOpen: true,\n            name: props.name,\n            link: props.link\n        });\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"page\">\n                <Header />\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick} />\n                \n\n                <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonName=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input className=\"popup__item popup__item_el_avatar\" name=\"avatar\" id=\"avatar-input\" type=\"url\"\n                                placeholder=\"Ссылка на аватар\" required />\n                            <span className=\"popup__error\" id=\"avatar-input-error\"></span>\n                        </>\n                    }\n                />\n\n                <PopupWithForm title=\"Редактировать профиль\" name=\"info\" buttonName=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input className=\"popup__item popup__item_el_name\" name=\"author\" id=\"name-input\" type=\"text\" required\n                                minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" />\n                            <span className=\"popup__error\" id=\"name-input-error\"></span>\n                            <input className=\"popup__item popup__item_el_prof\" name=\"job\" id=\"prof-input\" type=\"text\" required\n                                minLength=\"2\" maxLength=\"200\" />\n                            <span className=\"popup__error\" id=\"prof-input-error\"></span>\n                        </>\n                    }\n                />\n\n                <PopupWithForm title=\"Новое место\" name=\"add\" buttonName=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input className=\"popup__item popup__item_el_place\" name=\"name\" id=\"place-input\" type=\"text\"\n                                placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" />\n                            <span className=\"popup__error\" id=\"place-input-error\"></span>\n                            <input className=\"popup__item popup__item_el_link\" name=\"link\" id=\"url-input\" type=\"url\"\n                                placeholder=\"Ссылка на картинку\" required />\n                            <span className=\"popup__error\" id=\"url-input-error\"></span>\n                        </>\n                    }\n                />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                <Footer />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}