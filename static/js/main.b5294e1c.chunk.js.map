{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","key","link","onClick","onCardDelete","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","item","onCardClick","Footer","PopupWithForm","isOpen","noValidate","onSubmit","title","children","type","buttonName","id","onClose","ImagePopup","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","input","method","body","JSON","stringify","author","job","cardId","authorization","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","required","minLength","maxLength","pattern","placeholder","defaultValue","onChange","target","value","EditAvatarPopup","avaRef","useRef","setAvatar","onUpdateAvatar","current","ref","AddPlacePopup","inputName","inputLink","onUpdatePlace","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","setCards","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","all","getUserInfo","getInitialCards","user","initialCards","catch","err","console","log","Provider","deleteCard","newCards","filter","c","deleteLike","putLike","newCard","data","changeAvatar","newData","changeProfileInfo","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b5294e1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} className=\"header__logo\" alt=\"Место\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `place__delete ${isOwn ? '' : 'place__delete_hidden'}`\r\n      );\r\n    \r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `place__like ${isLiked ? 'place__like_active' : ''}`;\r\n\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleCardDelete() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=\"place\" key={props.card._id}>\r\n            <img className=\"place__picture\" alt=\"\" src={props.card.link} onClick={handleClick} />\r\n            <button className={cardDeleteButtonClassName} onClick={handleCardDelete}></button>\r\n            <div className=\"place__textarea\">\r\n                <p className=\"place__text\">{props.card.name}</p>\r\n                <div className=\"place__likesform\">\r\n                    <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"place__likecount\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext); \r\n\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-block\">\r\n                    <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"Жак-Ив Кусто\" />\r\n                    <button className=\"profile__edit-icon\" onClick={props.onEditAvatar}></button>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__info-grid\">\r\n                        <h2 className=\"profile__title\">{currentUser.name}</h2>\r\n                        <button className=\"edit-button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                <button className=\"add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"place-list\">\r\n                {props.cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup__container\" name={props.name} noValidate onSubmit={props.onSubmit}>\r\n                <fieldset className=\"popup__user-info\">\r\n                    <h3 className=\"popup__title\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup__button\" type=\"submit\">{props.buttonName}</button>\r\n                </fieldset>\r\n                <button className=\"close-button\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\r\n\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.card.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__picture-container\">\r\n                <img className=\"popup__full-picture\" alt={props.card.name} src={props.card.link} />\r\n                <p className=\"popup__picture-title\">{props.card.name}</p>\r\n                <button className=\"close-button\" id=\"close-button-picture\" type=\"reset\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup"," class Api{\r\n    constructor(options){\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo(){\r\n      return fetch(`${this.baseUrl}/users/me`, {headers: this.headers})\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    }\r\n\r\n    getInitialCards(){\r\n       return fetch(`${this.baseUrl}/cards`, {headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    changeProfileInfo(input){\r\n      return fetch(`${this.baseUrl}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.author,\r\n          about: input.job\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n\r\n    addNewCard(input){\r\n      return fetch(`${this.baseUrl}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.name,\r\n          link: input.link\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    putLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'PUT', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    deleteLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'DELETE', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    changeAvatar(input){\r\n      return fetch(`${this.baseUrl}/users/me/avatar`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: input.avatar\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n\r\n    deleteCard(cardId){\r\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {method: 'DELETE', headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n      authorization: 'db48a2d9-d58c-40f0-82e6-c72b8d0b86f5',\r\n      'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            author: name,\r\n            job: description\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title=\"Редактировать профиль\" name=\"info\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n            children={\r\n                <>\r\n                    <input className=\"popup__item popup__item_el_name\" name=\"author\" id=\"name-input\" type=\"text\" required\r\n                        minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" placeholder=\"Имя\" defaultValue={name} onChange={handleNameChange} />\r\n                    <span className=\"popup__error\" id=\"name-input-error\"></span>\r\n                    <input className=\"popup__item popup__item_el_prof\" name=\"job\" id=\"prof-input\" type=\"text\" required\r\n                        minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" defaultValue={description} onChange={handleDescriptionChange} />\r\n                    <span className=\"popup__error\" id=\"prof-input-error\"></span>\r\n                </>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const avaRef = React.useRef();\r\n    const [avatar, setAvatar] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setAvatar(currentUser.avatar);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateAvatar({\r\n                avatar: avaRef.current.value\r\n            }\r\n        );\r\n    }\r\n\r\n    function handleAvatarChange(e) {\r\n        setAvatar(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n            children={\r\n                <>\r\n                    <input className=\"popup__item popup__item_el_avatar\" name=\"avatar\" id=\"avatar-input\" type=\"url\"\r\n                        placeholder=\"Ссылка на аватар\" required defaultValue={avatar} ref={avaRef} onChange={handleAvatarChange} />\r\n                    <span className=\"popup__error\" id=\"avatar-input-error\"></span>\r\n                </>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const inputName = React.useRef();\r\n    const inputLink = React.useRef();\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.onUpdatePlace({\r\n            name: inputName.current.value,\r\n            link: inputLink.current.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title=\"Новое место\" name=\"add\" buttonName=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n                        children={\r\n                            <>\r\n                                <input className=\"popup__item popup__item_el_place\" name=\"name\" id=\"place-input\" type=\"text\"\r\n                                    placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" ref={inputName} />\r\n                                <span className=\"popup__error\" id=\"place-input-error\"></span>\r\n                                <input className=\"popup__item popup__item_el_link\" name=\"link\" id=\"url-input\" type=\"url\"\r\n                                    placeholder=\"Ссылка на картинку\" required ref={inputLink} />\r\n                                <span className=\"popup__error\" id=\"url-input-error\"></span>\r\n                            </>\r\n                        }\r\n                    />\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    //const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpen: false,\n        link: '',\n        name: ''\n    });\n\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, initialCards]) => {\n                setCurrentUser(user);\n                setCards([...initialCards]);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        (!isLiked ? api.putLike(card._id) : api.deleteLike(card._id))\n        .then((newCard) => {\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          setCards(newCards);\n        });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        });\n    }\n\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    /*function handleDeleteCardClick() {\n        setIsDeleteCardPopupOpen(true);\n    }*/\n\n    function handleCardClick(props) {\n        setSelectedCard({\n            isOpen: true,\n            name: props.name,\n            link: props.link\n        });\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n\n    \n    function handleUpdateAvatar(data){\n        api.changeAvatar(data)\n        .then((newData) => {\n            setCurrentUser(newData);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(`Ошибка: ${err}`);\n        })\n    }\n\n    function handleUpdateUser(data) {\n        api.changeProfileInfo(data)\n            .then((newData) => {\n                setCurrentUser(newData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n    function handleUpdateCards(data) {\n        api.addNewCard(data)\n          .then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n          })\n          .catch((err) => {\n            console.log(`Ошибка: ${err}`);\n          })\n      }\n\n\n    return (\n        <div className=\"App\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <div className=\"page\">\n                    <Header />\n                    <Main\n                        cards={cards}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDelete}\n                        onCardLike={handleCardLike} />\n\n\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdatePlace={handleUpdateCards}/>\n\n                    <PopupWithForm title=\"Вы уверены?\" name=\"delete\" buttonName=\"Да\" /*isOpen={isDeleteCardPopupOpen}*/ onClose={closeAllPopups} />\n\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                    <Footer />\n                </div>\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}